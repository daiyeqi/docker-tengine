name: build

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: daiyeqi/tengine

jobs:
  build:
    name: ${{ matrix.os }}-linux
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [debian, alpine]
        include:
          - os: debian
            flavor: true
            metadata-tag: |
              type=raw,value=bookworm
              type=match,pattern=v(.*),group=1,suffix=-bookworm
              type=match,pattern=v(.*),group=1
              type=match,pattern=v(\d),group=1,suffix=-bookworm
              type=match,pattern=v(\d.\d),group=1,suffix=-bookworm
              type=match,pattern=v(\d.\d.\d),group=1,suffix=-bookworm
              type=match,pattern=v(\d),group=1
              type=match,pattern=v(\d.\d),group=1
              type=match,pattern=v(\d.\d.\d),group=1
          - os: alpine
            flavor: false
            metadata-tag: |
              type=raw,value=alpine
              type=match,pattern=v(.*),group=1,suffix=-alpine
              type=match,pattern=v(\d),group=1,suffix=-alpine
              type=match,pattern=v(\d.\d),group=1,suffix=-alpine
              type=match,pattern=v(\d.\d.\d),group=1,suffix=-alpine

    permissions:
      contents: read
      packages: write
      attestations: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.IMAGE_NAME }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            latest=${{ matrix.flavor }}
          tags: ${{ matrix.metadata-tag }}

      - name: Build and Push Image
        uses: docker/build-push-action@v5
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          file: ${{ matrix.os }}/Dockerfile
          push: true
